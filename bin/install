#!/bin/bash

# install script
#
# This script runs build, starts drush runserver and then runs test.

# FLAG OPTIONS
#
# -dev
#   Sets the script to run in development mode. Currently this means that the
#   script will use the development version of the Drush Make file, and will
#   include .git directory.
#
# -webroot somevalue
#   The default webroot is 'www' but you can specifiy a different directory if
#   desired.
#
# -y
#   Skips all promts and assumes a 'confirm' action.

# Include the header
. bin/inc/header.sh

# Delete the webroot directory. We want a fresh start.
if [[ -d "${webroot}" ]] ; then
  echo "- Removing ${webroot}"
  rm -rf ${webroot_dir}
fi

# Build the site
echo "--- Building Site ---"
echo "- Webroot is set to: ${webroot}."

# Download dependencies listed in composer.json
echo "- Downloading dependencies via Composer."
if [ ! -f composer.phar ]; then
    curl -sS https://getcomposer.org/installer | php
fi

php composer.phar install

# Download Drupal core, contrib and custom packages. This need to be aware of the -dev flag
echo "- Downloading Drupal core, contrib, and custom via Drush Make."

# Create the database
echo "- Creating ${human_project_name} database"
if [[ ! -z "`mysql -qfsBe "SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME='${project_name}'" 2>&1`" ]];
then
  echo "- Database exists. Dropping and recreating."
  mysql -e "drop database ${project_name};create database ${project_name};"
else
  mysql -e "create database ${project_name};"
fi

# Run Drush site install
if [ "$development" == '1' ];
  then
    echo "- Installing ${human_project_name} in developer mode"
    # Download Drupal core and contrib
    drush make ${profile_dir}/build.make ${webroot} --working-copy -y

    # Create the symbolic link to the project's profile
    ln -s ${profile_dir} ${webroot_dir}/profiles/${project_name}

    # Install the site
    cd ${webroot_dir}
    drush si ${project_name} --db-url=mysql://root:@localhost/${project_name} --yes

    # Enabled modules that aid in development
    drush en devel config -y
  else
    echo "- Installing ${human_project_name} in production mode"
    # Download the needed modules, themes, and libraries
    drush make ${profile_dir}/build.make ${webroot} -y

    # Create the symbolic link to the project's profile
    ln -s ${profile_dir} ${webroot_dir}/profiles/${project_name}

    # Install the site
    cd ${webroot_dir}
    drush si ${project_name} --db-url=mysql://root:@localhost/${project_name} --yes
fi

# Issue:  Currently the way Drupal 8 creates configuration files is with
#         permissions that are too restrictive for CLI users, causing
#         errors when trying to update configuration. For now we set the
#         permissions to avoid this.
chmod -R 777 ${webroot_dir}/sites/default/files
chmod -R 777 ${webroot_dir}/sites/default/files/config*
chmod -R 777 ${webroot_dir}/sites/default/files/config*/active
chmod -R 777 ${webroot_dir}/sites/default/files/config*/active/*
chmod -R 777 ${webroot_dir}/sites/default/files/config*/staging
chmod -R 777 ${webroot_dir}/sites/default/files/config*/staging/*

# Build theme CSS
#echo "- Compiling theme LESS"
#mkdir ${base_dir}/${project_name}/themes/${project_name}_theme/css
#lessc ${base_dir}/${project_name}/themes/${project_name}_theme/less/style.less > ${base_dir}/${project_name}/themes/${project_name}_theme/css/style.css

# Run tests
echo "--- Running tests ---"
cd ${base_dir}
. bin/test
